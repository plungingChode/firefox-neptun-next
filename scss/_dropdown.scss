@use 'variables' as *;

@function encodecolor($string) {
  @if type-of($string) == 'color' {
    $hex: str-slice(ie-hex-str($string), 4);
    $string: unquote('#{$hex}');
  }
  $string: '%23' + $string;
  @return $string;
}

@mixin arrow-var($color) {
  --dropdown-arrow: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px' fill='#{encodecolor($color)}'%3E%3Cpath d='M0 0h24v24H0V0z' fill=' none'/%3E%3Cpath d='M7 10l5 5 5-5H7z'/%3E%3C/svg%3E");
}

$shadow-color: var(--neptun-major-accent-fill-contrast);

.nt-dropdown {
  border: 0.1rem solid transparent;
  padding: 0.25rem 1.5rem 0.25rem 0.5rem;

  border-radius: 4px;
  box-shadow: 2px 2px 0 0 $shadow-color;

  font-family: inherit;
  font-size: inherit;
  cursor: pointer;

  appearance: none;
  background-image: var(--dropdown-arrow);
  background-position: 97.5% 50%;
  background-repeat: no-repeat;

  & option {
    background-color: inherit;
  }

  &.primary {
    @include arrow-var(#fff);

    color: $major-accent-text;
    background-color: $major-accent-fill;

    &:hover {
      background-color: $major-accent-fill-hover;
    }
    &:active {
      background-color: $major-accent-fill-active;
    }
  }

  &.secondary {
    @include arrow-var(#2489ca);

    color: $minor-accent-text;
    background-color: inherit;
    border-color: currentColor;

    &:hover {
      color: $minor-accent-text-hover;
      background-color: $minor-accent-fill-hover;
    }
    &:active {
      color: $minor-accent-text-active;
      background-color: $minor-accent-fill-active;
    }
  }
}
